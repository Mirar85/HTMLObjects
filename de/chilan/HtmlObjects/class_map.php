<?phpnamespace de\chilan\HtmlObjects;use \Exception as Exception;class area extends attribute{	private $_alt = NULL;	private $_accesskey = NULL;	private $_coords = NULL;	private $_href = NULL;	private $_onblur = NULL;	private $_onfocus = NULL;	private $_shape = NULL;	private $_tabindex = NULL;	private $_target = NULL;		public function __construct ($x) {		$this->initDOM();		$this->_alt = $this->cdata($x);	 }	public function __set($element,$x)	{		switch ($element)		{			case 'accesskey': { $this->_accesskey = $this->cdata($x); }break;			case 'coords': { $this->_coords = $this->cdata($x); }break;			case 'href': { $this->_href = $this->cdata($x); }break;			case 'onblur': { $this->_onblur = $this->cdata($x); }break;			case 'onfocus': { $this->_onfocus = $this->cdata($x); }break;			case 'shape': { $this->_shape = $this->is_shape($x); }break;			case 'tabindex': { $this->_tabindex = $this->zahlen($x); }break;			case 'target': { $this->_target = $this->cdata($x); }break;			default:  parent::__set($element,$x);		} 	}	public function __get($element)	{		switch ($element)		{			case 'accesskey': { return $this->_accesskey; }break;			case 'coords': { return $this->_coords; }break;			case 'href': { return $this->_href; }break;			case 'onblur': { return $this->_onblur; }break;			case 'onfocus': { return $this->_onfocus; }break;			case 'shape': { return $this->_shape; }break;			case 'tabindex': { return $this->_tabindex; }break;			case 'target': { return $this->_target; }break;			default:  parent::__get($element);		} 	}	public function getAccesskey() {  return $this->_accesskey; }	public function getCoords() {  return $this->_coords; }	public function getHref() {  return $this->_href; }	public function getOnblur() {  return $this->_onblur; }	public function getOnfocus() {  return $this->_onfocus; }	public function getShape() {  return $this->_shape; }	public function getTabindex() {  return $this->_tabindex; }	public function getTarget() { return $this->_target; }	protected function convertThis()	{		$this->_htmlCode = "<area";		parent::convertThis();		if ($this->_href !== NULL) { $this->_htmlCode .= " href=\"$this->_href\""; }		if ($this->_alt !== NULL) { $this->_htmlCode .= " alt=\"$this->_alt\""; }		if ($this->_accesskey !== NULL) { $this->_htmlCode .= " accesskey=\"$this->_accesskey\""; }		if ($this->_coords !== NULL) { $this->_htmlCode .= " coords=\"$this->_coords\""; }		if ($this->_onblur !== NULL) { $this->_htmlCode .= " onblur=\"$this->_onblur\""; }		if ($this->_onfocus !== NULL) { $this->_htmlCode .= " onfocus=\"$this->_onfocus\""; }		if ($this->_shape !== NULL) { $this->_htmlCode .= " shape=\"$this->_shape\""; }		if ($this->_tabindex !== NULL) { $this->_htmlCode .= " tabindex=\"$this->_tabindex\""; }		if ($this->_target !== NULL) { $this->_htmlCode .= " target=\"$this->_target\""; }		return $this->_htmlCode .= " />\n";	}}class map extends attribute{	private $_name = "";	public function __construct($x,$y,$z = NULL) {		$this->initDOM();		$this->name = $this->cdata($x); 		$this->id = $this->cdata($y);		if ($z != NULL) {			$this->insert($z);		} 	}	public function __set($element,$x)	{		switch ($element)		{			case 'name': { $this->_name = $this->cdata($x); }break;			default:  parent::__set($element,$x);		}	}		public function __get($element)	{		switch ($element)		{			case 'name': { return $this->_name; }break;			default:  parent::__get($element);		}	}	public function getName($x) { return $this->_name; }	protected function convertThis()	{		$this->_htmlCode = "<map";		parent::convertThis();		if ($this->_name !== NULL) { $this->_htmlCode .= " name=\"$this->_name\""; }		$this->_htmlCode .= ">\n";				$this->_htmlCode = $this->convert($this->_htmlCode);				return $this->_htmlCode .= "</map>\n";	}}?>