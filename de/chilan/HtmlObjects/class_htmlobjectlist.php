<?phpnamespace de\chilan\HtmlObjects;use \Exception as Exception;class htmlobjectlist {		private static $_allHtmlClass = array('de\chilan\HtmlObjects\innerText','de\chilan\HtmlObjects\htmlobjectlist','de\chilan\HtmlObjects\nothing','de\chilan\HtmlObjects\a', 'de\chilan\HtmlObjects\abbr', 'de\chilan\HtmlObjects\acronym','de\chilan\HtmlObjects\address','de\chilan\HtmlObjects\area','de\chilan\HtmlObjects\b','de\chilan\HtmlObjects\base','de\chilan\HtmlObjects\bdo','de\chilan\HtmlObjects\big','de\chilan\HtmlObjects\blockquote','de\chilan\HtmlObjects\body','de\chilan\HtmlObjects\br','de\chilan\HtmlObjects\button','de\chilan\HtmlObjects\caption','de\chilan\HtmlObjects\cite','de\chilan\HtmlObjects\code','de\chilan\HtmlObjects\col','de\chilan\HtmlObjects\colgroup','de\chilan\HtmlObjects\dd','de\chilan\HtmlObjects\del','de\chilan\HtmlObjects\dfn','de\chilan\HtmlObjects\div','de\chilan\HtmlObjects\dl','de\chilan\HtmlObjects\dt','de\chilan\HtmlObjects\em','de\chilan\HtmlObjects\fieldset','de\chilan\HtmlObjects\form','de\chilan\HtmlObjects\frame','de\chilan\HtmlObjects\frameset','de\chilan\HtmlObjects\h1','de\chilan\HtmlObjects\h2','de\chilan\HtmlObjects\h3','de\chilan\HtmlObjects\h4','de\chilan\HtmlObjects\h5','de\chilan\HtmlObjects\h6','de\chilan\HtmlObjects\head','de\chilan\HtmlObjects\hr','de\chilan\HtmlObjects\html','de\chilan\HtmlObjects\i','de\chilan\HtmlObjects\iframe','de\chilan\HtmlObjects\img','de\chilan\HtmlObjects\input','de\chilan\HtmlObjects\ins','de\chilan\HtmlObjects\kbd','de\chilan\HtmlObjects\label','de\chilan\HtmlObjects\legend','de\chilan\HtmlObjects\li','de\chilan\HtmlObjects\link','de\chilan\HtmlObjects\map','de\chilan\HtmlObjects\meta','de\chilan\HtmlObjects\noframes','de\chilan\HtmlObjects\noscript','de\chilan\HtmlObjects\object','de\chilan\HtmlObjects\ol','de\chilan\HtmlObjects\optgroup','de\chilan\HtmlObjects\option','de\chilan\HtmlObjects\p','de\chilan\HtmlObjects\param','de\chilan\HtmlObjects\pre','de\chilan\HtmlObjects\q','de\chilan\HtmlObjects\samp','de\chilan\HtmlObjects\script','de\chilan\HtmlObjects\select','de\chilan\HtmlObjects\small','de\chilan\HtmlObjects\span','de\chilan\HtmlObjects\strong','de\chilan\HtmlObjects\style','de\chilan\HtmlObjects\sub','de\chilan\HtmlObjects\sup','de\chilan\HtmlObjects\table','de\chilan\HtmlObjects\tbody','de\chilan\HtmlObjects\td','de\chilan\HtmlObjects\textarea','de\chilan\HtmlObjects\tfoot','de\chilan\HtmlObjects\th','de\chilan\HtmlObjects\thead','de\chilan\HtmlObjects\title','de\chilan\HtmlObjects\tr','de\chilan\HtmlObjects\tt','de\chilan\HtmlObjects\ul','de\chilan\HtmlObjects\htmlvar','de\chilan\HtmlObjects\xml','de\chilan\HtmlObjects\text'); 	private $liste = array();		public function __construct($liste = array()) {		if ($liste === array() || is_array($liste)) {			$x = 0;			foreach ($liste as $value) {				$this->liste[$x] = $value;				$x++;			}		} 		else {			throw new Exception("HTML class fault (Type error): htmlobjectlist wants at initialized state a Array or nothing but get ".get_class($liste)."."); 		}	}		public static function getAllHtmlClass() {		return htmlobjectlist::$_allHtmlClass;	}		public function getSize() {		return count($this->liste);	}		private function checkIfHTMLObject($x) {			$htmlClass = htmlobjectlist::getAllHtmlClass();//array("innerText","nothing","htmlobjectlist","a", "abbr", "acronym","address","area","b","base","bdo","big","blockquote","body","br","button","caption","cite","code","col","colgroup","dd","del","dfn","div","dl","dt","em","fieldset","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","hr","html","i","iframe","img","input","ins","kbd","label","legend","li","link","map","meta","noframes","noscript","object","ol","optgroup","option","p","param","pre","q","samp","script","select","small","span","strong","style","sub","sup","table","tbody","td","textarea","tfoot","th","thead","title","tr","tt","ul","htmlvar","xml","text"); 				if (in_array(get_class($x),$htmlClass))		{			//if (get_class($x) == "htmlobjectlist") {			//	throw new Exception("HTML class fault(List error): You can't add a htmlobjectlist to a htmlobjectlist.");			//	return false;			//}			return true;		} 		else {			throw new Exception("HTML class fault(Type error): You can add only HTML class objects to the list.");		}		return false;	}		public function get($i) {		return $this->liste[$i];	}	/**	Add a List of the type htmlobjectlist to this list (Copy the list into this list).	When second arguement is true it will be add to begin of the list. */		public function addList($element,$begin = false) {		if ($this->checkIfHTMLObject($element)) {			if (get_class($element) == "htmlobjectlist") {				if ($begin === true) {					$sizeOfList1 = $element->getSize();					$sizeOfList2 = $this->getSize();										$liste_temp = array();					$liste_temp[0] = $element;					for ($i=0;$i<$sizeOfList1;$i++) {						$liste_temp[$i] = $element[$i];					}										for ($i=0;$i<$sizeOfList2;$i++) {						$liste_temp[$i+sizeOfList1] = $this->liste[$i];					}					$this->liste = $liste_temp;				}				else {					$sizeOfList1 = $element->getSize();					$sizeOfList2 = $this->getSize();					for ($i=0;$i<$sizeOfList1;$i++) {						$this->liste[$sizeOfList2+$i] = $element->get($i);					}				}			}			else {				throw new Exception("HTML class fault(ListType error): You can add only a list of htmlobejectlist with this method.");			}		}	}/**	Add one element to the end of the list. This can be a HTML object	When it is a htmlobjectlist this list will add one by one in the list	The start is always 0*/		public function add($element) {		if ($this->checkIfHTMLObject($element)) {			if (get_class($element) == "htmlobjectlist") {					$sizeOfList1 = $element->getSize();					$sizeOfList2 = $this->getSize();					for ($i=0;$i<$sizeOfList1;$i++) {						$this->liste[$sizeOfList2+$i] = $element->get($i);					}			}			else {				$this->liste[$this->getSize()] = $element;							}		}	}/**	Add one element to the start of the list. This can be a HTML object	When it is a htmlobjectlist it will add one by one at the start of the list	The start is always 0*/		public function addFirst($element) {		addAfter($element,-1);	}		public function addBefor($element,$x) {		addAfter($element,$x-1);	}		public function addAfter($element,$x) {		if ($x >= $this->getSize() || $x < -1) {			throw new Exception("HTML class fault(Index out of bound): There is no object in the htmlobjectlist with the number $x. The last index is ".$this->getSize());		}		if ($this->checkIfHTMLObject($element)) {			if (get_class($element) == "htmlobjectlist") {							$sizeOfList1 = $element->getSize();				$sizeOfList2 = $this->getSize();								$liste_temp = array();								for ($i=0;$i<$sizeOfList1+$sizeOfList2;$i++) {					if ($i < $x+1) {						$liste_temp[$i] = $this->liste[$i];					}					if ($i > ($x+$sizeOfList1)) {						$liste_temp[$i] = $this->liste[$i-$sizeOfList1];					}				}				for ($i=0;$i<$sizeOfList1;$i++) {					$liste_temp[$i+$x+1] = $element->get($i);				}				$this->liste = $liste_temp;			}			else {				$sizeOfList = $this->getSize();				$liste_temp = array();				$liste_temp[$x+1] = $element;				for ($i=0;$i<=$sizeOfList;$i++) {					if ($i <= $x) {						$liste_temp[$i] = $this->liste[$i];					}					if ($i > $x+1) {						$liste_temp[$i] = $this->liste[$i-1];					}				}				$this->liste = $liste_temp;			}		}	}}?>